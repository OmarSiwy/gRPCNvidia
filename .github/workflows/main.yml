name: Build Docker image

on:
  push:
  pull_request:


env:
  REGISTRY: ghcr.io

jobs:
  BuildImage:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set environment variables
      run: |
        echo "IMAGE_NAME=$(echo '${{ github.repository }}/image' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        echo "IMAGE_NAME2=$(echo '${{ github.repository }}/test' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        file: Dockerfile 
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          BUILD_TESTS=OFF
          BUILD_PYTHON=ON

  BuildTest:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Set environment variables
      run: |
        echo "IMAGE_NAME2=$(echo '${{ github.repository }}/test' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME2 }}

    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        file: Dockerfile 
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  Test:
    runs-on: ubuntu-latest
    needs: BuildTest
    container:
      image: ghcr.io/omarsiwy/grpcnvidia/test:main

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set ownership
        run: |
          # Workaround for https://github.com/actions/runner/issues/2033
          chown -R $(id -u):$(id -g) $PWD

      - name: Install Docker Compose
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          sudo curl -L "https://github.com/docker/compose/releases/download/${LATEST_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Run Docker Compose
        run: |
          docker-compose up test

      - name: List directory contents
        run: ls -alh

      - name: Run Google Test
        run: |
          cd build && ctest
